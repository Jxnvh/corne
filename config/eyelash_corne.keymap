#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LS(RIGHT_BRACE)>, <&kp RA(RIGHT_BRACKET)>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <26>;
            flavor = "hold-preferred";
        };

        slash: slash {
            compatible = "zmk,behavior-tap-dance";
            label = "SLASH";
            #binding-cells = <0>;
            bindings = <&kp LS(N7)>, <&kp RA(MINUS)>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        colon {
            bindings = <&kp LS(DOT)>;
            key-positions = <23 24>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        sd_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <15 16>;
        };

        screenshot {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <26 27>;
        };

        l {
            bindings = <&kp RA(NON_US_BSLH)>;
            key-positions = <8 23>;
            layers = <2>;
        };

        ji {
            bindings = <&kp NUBS>;
            key-positions = <23 9>;
            layers = <2>;
        };

        uk {
            bindings = <&kp LS(NUBS)>;
            key-positions = <8 24>;
            layers = <2>;
        };

        zj {
            bindings = <&kp LS(EQUAL)>;
            key-positions = <7 23>;
            layers = <2>;
        };

        at {
            bindings = <&kp RA(Q)>;
            key-positions = <14 5>;
        };

        plus {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <25 11>;
            layers = <2>;
        };

        und {
            bindings = <&kp LS(KP_NUMBER_6)>;
            key-positions = <22 24>;
        };

        minus {
            bindings = <&kp SLASH>;
            key-positions = <22 23>;
            layers = <0>;
        };

        underscore {
            bindings = <&kp LS(SLASH)>;
            key-positions = <36 37>;
            layers = <0>;
        };

        sq {
            bindings = <&kp LS(NUHS)>;
            key-positions = <9 24>;
            layers = <2>;
        };

        backslash {
            bindings = <&kp RA(MINUS)>;
            key-positions = <8 24 39>;
            layers = <2>;
        };

        pl {
            bindings = <&kp RBRC>;
            key-positions = <11 25>;
        };

        ue {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 3>;
        };

        sz {
            bindings = <&kp MINUS>;
            key-positions = <15 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T                               &kp UP                &kp Y        &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                              &kp LGUI  &mo 1  &lt 3 SPACE                                               &lt 3 ENTER  &mo 2  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3      &kp N4       &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &none            &none           &none       &none        &none                          &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &kp K_COPY  &kp K_PASTE  &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans      &trans       &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp LS(N5)                            &mmv MOVE_UP                     &kp NUHS       &kp RA(N7)  &kp RA(N0)  &kp LPAR      &kp RPAR                                  &kp BSPC
&trans  &none         &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &slash         &kp LS(N8)  &kp LS(N9)  &kp RA(RBRC) &kp GRAVE  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5    &trans                    &mmv MOVE_DOWN                   &kp LS(MINUS)  &kp RA(N8)  &kp RA(N9)  &kp RBRC      &kp RA(NUBS)                              &kp TILDE
                                    &trans     &trans     &kp SPACE                                                              &kp RET        &trans      &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10         &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &bt BT_SEL 0    &bt BT_SEL 1
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK  &bt BT_CLR_ALL
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
